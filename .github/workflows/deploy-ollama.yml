name: Build and Publish

on:
  # # Uncomment the following lines to enable automatic deployment on push or pull request
  # # using ollama to generate content, instead of openai
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  # schedule:
  #   - cron: "0 4,7,10,13,15,18 * * *"   # <=== Runs every 3hrs from 6am to 6pm
  workflow_dispatch:

jobs:
  deploy:
    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
    - name: setup-ollama
      uses: ai-action/setup-ollama@v1.1.3

    - name: Run LLM
      run: ollama run llama3.2 "" # https://github.com/ollama/ollama/blob/main/docs/faq.md#how-can-i-preload-a-model-into-ollama-to-get-faster-response-times

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Restore cached data
      id: cached-content-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          .cache
        key: cached-folder-${{ github.run_id }}"
        restore-keys: |
          cached-folder-

    - name: Run static generator
      env:
        OPENAI_API_KEY: "dummy-key-not-used-by-ollama"
        OPENAI_API_BASE_URL: "http://localhost:11434/v1/"
        OPENAI_MODEL_NAME: llama3.2
        OPENAI_SENTIMENT_MODEL_NAME: llama3.2
        MAX_ITEMS_PER_FEED: 20
      run: |
        npm run build

    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Upload generated content
      uses: actions/upload-pages-artifact@v3
      with:
        # Upload entire repository
        path: './dist'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Save Cached Content
      id: cached-content-save
      uses: actions/cache/save@v4
      with:
        path: |
          .cache
        key: ${{ steps.cached-content-restore.outputs.cache-primary-key }}

